#most frequent and least frequent words
doc_features[order(-count)][1:10] #top 10 most frequent words
doc_features[order(count)][1:10] #least 10 frequent words
processed_data <- as.data.table(as.matrix(new_docterm_corpus))
text_dataset <- cbind(df.original, processed_data)
head(text_dataset)
library("qdap")
install.packages(qdap)
install.packages("qdap")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
#install.packages("jsonlite") Will need this
#install.packages("tm") will need this for text mining
#install.packages("qdap") used for word_count function
library(jsonlite)
The_Elder_Scrolls_JSON <- "The_Elder_Scrolls_V.jsonlines"
df.original <- stream_in(file(The_Elder_Scrolls_JSON))
nrow(df.original)
ncol(df.original)
head(df.original)
library(ggplot2)
#100 hours
ggplot(df.original, aes(x=total_game_hours, fill=num_found_helpful)) + geom_bar(position=position_dodge()) + coord_flip() + xlim(0,100) + ylim(0,10) +
labs(
title = "Distribution of game hours and helpful reviews (100 hours)",
x = "Total game hours",
y = "Reviews found helpful"
)
#200 hours
ggplot(df.original, aes(x=total_game_hours, fill=num_found_helpful)) + geom_bar(position=position_dodge()) + coord_flip() + xlim(100,200) + ylim(0,10) +
labs(
title = "Distribution of game hours and helpful reviews (200 hours)",
x = "Total game hours",
y = "Reviews found helpful"
)
#300 hours
ggplot(df.original, aes(x=total_game_hours, fill=num_found_helpful)) + geom_bar(position=position_dodge()) + coord_flip() + xlim(200,300) + ylim(0,10) +
labs(
title = "Distribution of game hours and helpful reviews (100 hours)",
x = "Total game hours",
y = "Reviews found helpful"
)
#400 hours
ggplot(df.original, aes(x=total_game_hours, fill=num_found_helpful)) + geom_bar(position=position_dodge()) + coord_flip() + xlim(300,400) + ylim(0,10) +
labs(
title = "Distribution of game hours and helpful reviews (100 hours)",
x = "Total game hours",
y = "Reviews found helpful"
)
#500 hours
ggplot(df.original, aes(x=total_game_hours, fill=num_found_helpful)) + geom_bar(position=position_dodge()) + coord_flip() + xlim(400,500) + ylim(0,10) +
labs(
title = "Distribution of game hours and helpful reviews (100 hours)",
x = "Total game hours",
y = "Reviews found helpful"
)
#100 hours
ggplot(df.original, aes(x=total_game_hours, fill=num_found_funny)) + geom_bar(position=position_dodge()) + coord_flip() + xlim(0,100) + ylim(0,10) +
labs(
title = "Distribution of game hours and helpful reviews (100 hours)",
x = "Total game hours",
y = "Reviews found funny"
)
#200 hours
ggplot(df.original, aes(x=total_game_hours, fill=num_found_funny)) + geom_bar(position=position_dodge()) + coord_flip() + xlim(100,200) + ylim(0,10) +
labs(
title = "Distribution of game hours and helpful reviews (100 hours)",
x = "Total game hours",
y = "Reviews found funny"
)
#300 hours
ggplot(df.original, aes(x=total_game_hours, fill=num_found_funny)) + geom_bar(position=position_dodge()) + coord_flip() + xlim(200,300) + ylim(0,10) +
labs(
title = "Distribution of game hours and helpful reviews (100 hours)",
x = "Total game hours",
y = "Reviews found funny"
)
#400 hours
ggplot(df.original, aes(x=total_game_hours, fill=num_found_funny)) + geom_bar(position=position_dodge()) + coord_flip() + xlim(300,400) + ylim(0,10) +
labs(
title = "Distribution of game hours and helpful reviews (100 hours)",
x = "Total game hours",
y = "Reviews found funny"
)
#500 hours
ggplot(df.original, aes(x=total_game_hours, fill=num_found_funny)) + geom_bar(position=position_dodge()) + coord_flip() + xlim(400,500) + ylim(0,10) +
labs(
title = "Distribution of game hours and helpful reviews (100 hours)",
x = "Total game hours",
y = "Reviews found funny"
)
#100 hours
ggplot(df.original, aes(x=total_game_hours, fill=num_found_unhelpful)) + geom_bar(position=position_dodge()) + coord_flip() + xlim(0,100) + ylim(0,10) +
labs(
title = "Distribution of game hours and helpful reviews (100 hours)",
x = "Total game hours",
y = "Reviews found unhelpful"
)
#200 hours
ggplot(df.original, aes(x=total_game_hours, fill=num_found_unhelpful)) + geom_bar(position=position_dodge()) + coord_flip() + xlim(100,200) + ylim(0,10) +
labs(
title = "Distribution of game hours and helpful reviews (100 hours)",
x = "Total game hours",
y = "Reviews found unhelpful"
)
#300 hours
ggplot(df.original, aes(x=total_game_hours, fill=num_found_unhelpful)) + geom_bar(position=position_dodge()) + coord_flip() + xlim(200,300) + ylim(0,10) +
labs(
title = "Distribution of game hours and helpful reviews (100 hours)",
x = "Total game hours",
y = "Reviews found unhelpful"
)
#400 hours
ggplot(df.original, aes(x=total_game_hours, fill=num_found_unhelpful)) + geom_bar(position=position_dodge()) + coord_flip() + xlim(300,400) + ylim(0,10) +
labs(
title = "Distribution of game hours and helpful reviews (100 hours)",
x = "Total game hours",
y = "Reviews found unhelpful"
)
#500 hours
ggplot(df.original, aes(x=total_game_hours, fill=num_found_unhelpful)) + geom_bar(position=position_dodge()) + coord_flip() + xlim(400,500) + ylim(0,10) +
labs(
title = "Distribution of game hours and helpful reviews (100 hours)",
x = "Total game hours",
y = "Reviews found unhelpful"
)
#print(df.original$review)
# Commented out for knitting purposes
df.original$is_short_review <- ifelse(nchar(df.original$review)<120,1,0)
#Short reviews found helpful or unhelpful
barplot(with(df.original, table(num_found_helpful, is_short_review)), main = "Short Reviews found Helpful or Unhelpful", col=1)
#Short reviews found funny
barplot(with(df.original, table(num_found_funny, is_short_review)), main = "Short Reviews found Funny or Unfunny", col=1)
# Text Mining set was pulled from "https://www.hackerearth.com/practice/machine-learning/advanced-techniques/text-mining-feature-engineering-r/tutorial/"
library(data.table)
library(tm)
library(SnowballC)
tdata <- df.original
tdata$review <- lapply(tdata$review, tolower)
text_corpus <- Corpus(VectorSource(tdata$review))
# Clean Corpus Data
dropword <- "br"
text_corpus <- tm_map(text_corpus, content_transformer(removeWords),dropword)
text_corpus <- tm_map(text_corpus, content_transformer(tolower))
text_corpus <- tm_map(text_corpus, content_transformer(removePunctuation))
text_corpus <- tm_map(text_corpus, content_transformer(removeNumbers))
text_corpus <- tm_map(text_corpus, content_transformer(removeWords), c(stopwords('english')))
text_corpus <- tm_map(text_corpus, content_transformer(stripWhitespace))
# Stem the document so all plural words are now counted as one word
text_corpus <- tm_map(text_corpus, stemDocument, language = "english")
#print(as.character(text_corpus[[1]]))
#text_corpus[[1]]$content
docterm_corpus <- DocumentTermMatrix(text_corpus)
dim(docterm_corpus)
new_docterm_corpus <- removeSparseTerms(docterm_corpus,sparse = 0.95)
dim(new_docterm_corpus)
#find frequent terms
colS <- colSums(as.matrix(new_docterm_corpus))
length(colS)
doc_features <- data.table(name = attributes(colS)$names, count = colS)
#most frequent and least frequent words
doc_features[order(-count)][1:10] #top 10 most frequent words
doc_features[order(count)][1:10] #least 10 frequent words
processed_data <- as.data.table(as.matrix(new_docterm_corpus))
text_dataset <- cbind(df.original, processed_data)
head(text_dataset)
library("qdap")
library("qdap")
install.packages("qdap")
library("qdap")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(dplyr)
library(tidyr)
library(ggplot2)
df <- read.csv("mst_enrollment2015.csv")
unique_countries <- unique(df$Country)
length(unique_countries)
# There are 89 unique countries
df <- df[-1]
df <- df %>% filter(Country == "United States")
df <- df %>% gather(Year, Enroll ,c(X2011,X2012,X2013,X2014,X2015))
df
df <- df %>% group_by(State) %>% summarise(Total_Enroll = sum(Enroll))
df
df <- df %>% filter(State != "Missouri")
df <- arrange(df,-Total_Enroll)
head(df)
us_states <- map_data("state")
str(us_states)
map_state <- unique(us_states$region)
df$Region <- tolower(df$State)
setdiff(df$Region,map_state)
gg <- ggplot()
gg <- gg + geom_map(data = us_states, map = us_states,
aes(x = long, y = lat, map_id = region),
fill="#ffffff", color="#ffffff", size=0.15)
gg
gg <- gg + geom_map(data=df, map = us_states,
aes(fill=Total_Enroll, map_id=Region),
color="#ffffff", size=0.15)
gg
View(gg)
install.packages("mapproj")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(dplyr)
library(tidyr)
library(ggplot2)
df <- read.csv("mst_enrollment2015.csv")
unique_countries <- unique(df$Country)
length(unique_countries)
# There are 89 unique countries
df <- df[-1]
df <- df %>% filter(Country == "United States")
df <- df %>% gather(Year, Enroll ,c(X2011,X2012,X2013,X2014,X2015))
df
df <- df %>% group_by(State) %>% summarise(Total_Enroll = sum(Enroll))
df
df <- df %>% filter(State != "Missouri")
df <- arrange(df,-Total_Enroll)
head(df)
us_states <- map_data("state")
str(us_states)
map_state <- unique(us_states$region)
df$Region <- tolower(df$State)
setdiff(df$Region,map_state)
gg <- ggplot()
gg <- gg + geom_map(data = us_states, map = us_states,
aes(x = long, y = lat, map_id = region),
fill="#ffffff", color="#ffffff", size=0.15)
gg
gg <- gg + geom_map(data=df, map = us_states,
aes(fill=Total_Enroll, map_id=Region),
color="#ffffff", size=0.15)
gg
gg <- gg + scale_fill_continuous(low = "thistle2", high= "darkred",
guide="colorbar")
gg <- gg + labs(fill = "Population (Millions)",
title = "US Population (2010)",
x = "", y="")
gg <- gg + theme(panel.border = element_blank())
gg <- gg + theme(panel.background = element_blank())
gg <- gg + theme(axis.ticks = element_blank())
gg <- gg + theme(axis.text = element_blank())
gg
gg <- gg + scale_fill_continuous(low = "thistle2", high= "darkred",
guide="colorbar")
gg <- gg + labs(fill = "Enrollment",
title = "US Enrollment",
x = "", y="")
gg <- gg + theme(panel.border = element_blank())
gg <- gg + theme(panel.background = element_blank())
gg <- gg + theme(axis.ticks = element_blank())
gg <- gg + theme(axis.text = element_blank())
gg
gg <- gg + scale_fill_continuous(low = "thistle2", high= "blue",
guide="colorbar")
gg <- gg + labs(fill = "Enrollment",
title = "US Enrollment",
x = "", y="")
gg <- gg + theme(panel.border = element_blank())
gg <- gg + theme(panel.background = element_blank())
gg <- gg + theme(axis.ticks = element_blank())
gg <- gg + theme(axis.text = element_blank())
gg
gg <- gg + scale_fill_continuous(low = "thistle2", high= "blue",
guide="colorbar")
gg <- gg + labs(fill = "Enrollment",
title = "US Enrollment",
x = "", y="")
gg <- gg + theme(panel.border = element_blank())
gg <- gg + theme(panel.background = element_blank())
gg <- gg + theme(axis.ticks = element_blank())
gg <- gg + theme(axis.text = element_blank())
gg
gg <- gg + scale_fill_continuous(low = "thistle2", high= "darkblue",
guide="colorbar")
gg <- gg + labs(fill = "Enrollment",
title = "US Enrollment",
x = "", y="")
gg <- gg + theme(panel.border = element_blank())
gg <- gg + theme(panel.background = element_blank())
gg <- gg + theme(axis.ticks = element_blank())
gg <- gg + theme(axis.text = element_blank())
gg
gg <- gg + scale_fill_continuous(low = "thistle2", high= "dargreen",
guide="colorbar")
gg <- gg + scale_fill_continuous(low = "thistle2", high= "darkgreen",
guide="colorbar")
gg <- gg + labs(fill = "Enrollment",
title = "US Enrollment",
x = "", y="")
gg <- gg + theme(panel.border = element_blank())
gg <- gg + theme(panel.background = element_blank())
gg <- gg + theme(axis.ticks = element_blank())
gg <- gg + theme(axis.text = element_blank())
gg
gg <- gg + scale_fill_continuous(low = "grenn", high= "darkgreen",
guide="colorbar")
gg <- gg + scale_fill_continuous(low = "greem", high= "darkgreen",
guide="colorbar")
gg <- gg + scale_fill_continuous(low = "green", high= "darkgreen",
guide="colorbar")
gg <- gg + labs(fill = "Enrollment",
title = "US Enrollment",
x = "", y="")
gg <- gg + theme(panel.border = element_blank())
gg <- gg + theme(panel.background = element_blank())
gg <- gg + theme(axis.ticks = element_blank())
gg <- gg + theme(axis.text = element_blank())
gg
gg <- gg + scale_fill_continuous(low = "lightgreen", high= "darkgreen",
guide="colorbar")
gg <- gg + labs(fill = "Enrollment",
title = "US Enrollment",
x = "", y="")
gg <- gg + theme(panel.border = element_blank())
gg <- gg + theme(panel.background = element_blank())
gg <- gg + theme(axis.ticks = element_blank())
gg <- gg + theme(axis.text = element_blank())
gg
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(dplyr)
library(tidyr)
library(ggplot2)
df <- read.csv("mst_enrollment2015.csv")
unique_countries <- unique(df$Country)
length(unique_countries)
# There are 89 unique countries
df <- df[-1]
df <- df %>% filter(Country == "United States")
df <- df %>% gather(Year, Enroll ,c(X2011,X2012,X2013,X2014,X2015))
df
df <- df %>% group_by(State) %>% summarise(Total_Enroll = sum(Enroll))
df
df <- df %>% filter(State != "Missouri")
df <- arrange(df,-Total_Enroll)
head(df)
us_states <- map_data("state")
str(us_states)
map_state <- unique(us_states$region)
df$Region <- tolower(df$State)
setdiff(df$Region,map_state)
gg <- ggplot()
gg <- gg + geom_map(data = us_states, map = us_states,
aes(x = long, y = lat, map_id = region),
fill="#ffffff", color="#ffffff", size=0.15)
gg
gg <- gg + geom_map(data=df, map = us_states,
aes(fill=Total_Enroll, map_id=Region),
color="#ffffff", size=0.15)
gg
gg <- gg + scale_fill_continuous(low = "lightgreen", high= "darkgreen",
guide="colorbar")
gg <- gg + labs(fill = "Enrollment",
title = "US Enrollment",
x = "", y="")
gg <- gg + theme(panel.border = element_blank())
gg <- gg + theme(panel.background = element_blank())
gg <- gg + theme(axis.ticks = element_blank())
gg <- gg + theme(axis.text = element_blank())
gg
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(dplyr)
library(tidyr)
library(ggplot2)
df <- read.csv("mst_enrollment2015.csv")
unique_countries <- unique(df$Country)
length(unique_countries)
# There are 89 unique countries
df <- df[-1]
df <- df %>% filter(Country == "United States")
df <- df %>% gather(Year, Enroll ,c(X2011,X2012,X2013,X2014,X2015))
df
df <- df %>% group_by(State) %>% summarise(Total_Enroll = sum(Enroll))
df
df <- df %>% filter(State != "Missouri")
df <- arrange(df,-Total_Enroll)
head(df)
us_states <- map_data("state")
str(us_states)
map_state <- unique(us_states$region)
df$Region <- tolower(df$State)
setdiff(df$Region,map_state)
gg <- gg + scale_fill_continuous(low = "lightgreen", high= "darkgreen",
guide="colorbar")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(dplyr)
library(tidyr)
library(ggplot2)
df <- read.csv("mst_enrollment2015.csv")
unique_countries <- unique(df$Country)
length(unique_countries)
# There are 89 unique countries
df <- df[-1]
df <- df %>% filter(Country == "United States")
df <- df %>% gather(Year, Enroll ,c(X2011,X2012,X2013,X2014,X2015))
df
df <- df %>% group_by(State) %>% summarise(Total_Enroll = sum(Enroll))
df
df <- df %>% filter(State != "Missouri")
df <- arrange(df,-Total_Enroll)
head(df)
us_states <- map_data("state")
str(us_states)
map_state <- unique(us_states$region)
df$Region <- tolower(df$State)
setdiff(df$Region,map_state)
gg <- ggplot()
gg <- gg + scale_fill_continuous(low = "lightgreen", high= "darkgreen",
guide="colorbar")
gg <- gg + labs(fill = "Enrollment",
title = "US Enrollment",
x = "", y="")
gg <- gg + theme(panel.border = element_blank())
gg <- gg + theme(panel.background = element_blank())
gg <- gg + theme(axis.ticks = element_blank())
gg <- gg + theme(axis.text = element_blank())
gg
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(dplyr)
library(tidyr)
library(ggplot2)
df <- read.csv("mst_enrollment2015.csv")
unique_countries <- unique(df$Country)
length(unique_countries)
# There are 89 unique countries
df <- df[-1]
df <- df %>% filter(Country == "United States")
df <- df %>% gather(Year, Enroll ,c(X2011,X2012,X2013,X2014,X2015))
df
df <- df %>% group_by(State) %>% summarise(Total_Enroll = sum(Enroll))
df
df <- df %>% filter(State != "Missouri")
df <- arrange(df,-Total_Enroll)
head(df)
us_states <- map_data("state")
str(us_states)
map_state <- unique(us_states$region)
df$Region <- tolower(df$State)
setdiff(df$Region,map_state)
gg <- ggplot()
gg <- gg + geom_map(data = us_states, map = us_states,
aes(x = long, y = lat, map_id = region),
fill="#ffffff", color="#ffffff", size=0.15)
gg
gg <- gg + geom_map(data=df, map = us_states,
aes(fill=Total_Enroll, map_id=Region),
color="#ffffff", size=0.15)
gg
gg <- gg + scale_fill_continuous(low = "lightgreen", high= "darkgreen",
guide="colorbar")
gg <- gg + labs(fill = "Enrollment",
title = "US Enrollment",
x = "", y="")
gg <- gg + theme(panel.border = element_blank())
gg <- gg + theme(panel.background = element_blank())
gg <- gg + theme(axis.ticks = element_blank())
gg <- gg + theme(axis.text = element_blank())
gg
gg <- gg + geom_map(data = us_states, map = us_states,
aes(x = long, y = lat, map_id = region),
fill="#ffffff", color="#ffffff", size=0.15)
gg
gg <- ggplot()
gg <- gg + geom_map(data=df, map = us_states,
aes(fill=Total_Enroll, map_id=Region),
color="#ffffff", size=0.15)
gg
gg <- ggplot()
gg <- ggplot()
gg <- gg + geom_map(data = us_states, map = us_states,
aes(x = long, y = lat, map_id = region),
fill="#ffffff", color="#ffffff", size=0.15)
gg
gg <- gg + geom_map(data=df, map = us_states,
aes(fill=Total_Enroll, map_id=Region),
color="#ffffff", size=0.15)
gg
gg <- ggplot()
gg
gg <- gg + geom_map(data=df, map = us_states,
aes(fill=Total_Enroll, map_id=Region),
color="#ffffff", size=0.15)
gg
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(dplyr)
library(tidyr)
library(ggplot2)
df <- read.csv("mst_enrollment2015.csv")
unique_countries <- unique(df$Country)
length(unique_countries)
# There are 89 unique countries
df <- df[-1]
df <- df %>% filter(Country == "United States")
df <- df %>% gather(Year, Enroll ,c(X2011,X2012,X2013,X2014,X2015))
df
df <- df %>% group_by(State) %>% summarise(Total_Enroll = sum(Enroll))
df
df <- df %>% filter(State != "Missouri")
df <- arrange(df,-Total_Enroll)
head(df)
us_states <- map_data("state")
str(us_states)
map_state <- unique(us_states$region)
df$Region <- tolower(df$State)
