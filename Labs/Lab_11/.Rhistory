library(esquisse)
# set dates
first.date <- Sys.Date() - 120
last.date <- Sys.Date()
freq.data <- 'daily'
# set tickers
tickers <- c('doge-usd')
df <- as.data.frame(BatchGetSymbols(tickers = tickers,
first.date = first.date,
last.date = last.date,
freq.data = freq.data,
cache.folder = file.path(tempdir(),
'BGS_Cache') ), stringsAsFactors = TRUE) # cache in tempdir()
# remove variables
df <- subset(df, select = -c(df.control.src, df.control.download.status, df.control.perc.benchmark.dates, df.control.threshold.decision, df.control.total.obs, df.control.ticker))
df <- subset(df,select = -c(df.tickers.ret.adjusted.prices, df.tickers.ret.closing.prices))
df$df.tickers.ref.date <- as.POSIXct(df$df.tickers.ref.date, format = "%Y-%m-%d")
#df$df.tickers.ref.date <- format.Date(df$df.tickers.ref.date)
#df$df.tickers.ref.date <- c(1:91)
fitControl <- trainControl(method = "cv", number = 5)
set.seed(123)
scatter.smooth(x=df$df.tickers.ref.date, y=df$df.tickers.price.close, main= tickers)  # scatterplot
df %>%
filter(df.tickers.ref.date >= "2020-12-18" & df.tickers.ref.date <= "2021-04-16") %>%
ggplot() +
aes(x = df.tickers.ref.date, y = df.tickers.price.close) +
geom_line(size = 0.5, colour = "#112446") +
theme_minimal()
# Create Training and Test data -
set.seed(123)  # setting seed to reproduce results of random sampling
trainingRowIndex <- sample(1:nrow(df), 0.8*nrow(df))  # row indices for training data
trainingData <- df[trainingRowIndex, ]  # model training data
testData  <- df[-trainingRowIndex, ]   # test data
# Build the model on training data -
lmMod <- lm(df.tickers.ref.date ~ df.tickers.price.close, data=trainingData)  # build the model
pricePred <- predict(lmMod, testData)  # predict distance
actuals_preds <- data.frame(cbind(actuals=testData$fd.tickers.price.close, predicteds=pricePred))  # make actuals_predicteds dataframe.
correlation_accuracy <- cor(actuals_preds)
head(actuals_preds)
CVResults <- CVlm(data = df, form.lm = df.tickers.price.close ~ df.tickers.ref.date, m = 500, dots = FALSE, seed = 123)
t.test(mpg~am, data = mtcars)
library(dplyr)
library(ggplot2)
str(mtcars)
head(mtcars)
df <- select(mtcars, 1, 9)
mtcars$am <- as.factor(mtcars$am)
levels(mtcars$am) <- c("Automatic", "Manual")
ggplot(mtcars, aes(x=factor(am),y=mpg,fill=factor(am)))+
geom_boxplot(notch=F)+
scale_x_discrete("Transmission")+
scale_y_continuous("Miles per Gallon")+
ggtitle("MPG by Transmission Type")
t.test(mpg~am, data = mtcars)
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg)
ttest
library(dplyr)
library(ggplot2)
str(mtcars)
head(mtcars)
df <- select(mtcars, 1, 9)
mtcars$am <- as.factor(mtcars$am)
levels(mtcars$am) <- c("Automatic", "Manual")
ggplot(mtcars, aes(x=factor(am),y=mpg,fill=factor(am)))+
geom_boxplot(notch=F)+
scale_x_discrete("Transmission")+
scale_y_continuous("Miles per Gallon")+
ggtitle("MPG by Transmission Type")
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg)
ttest
library(dplyr)
library(ggplot2)
str(mtcars)
head(mtcars)
df <- select(mtcars, 1, 9)
mtcars$am <- as.factor(mtcars$am)
levels(mtcars$am) <- c("Automatic", "Manual")
ggplot(mtcars, aes(x=factor(am),y=mpg,fill=factor(am)))+
geom_boxplot(notch=F)+
scale_x_discrete("Transmission")+
scale_y_continuous("Miles per Gallon")+
ggtitle("MPG by Transmission Type")
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg)
ttest
library(dplyr)
library(ggplot2)
str(mtcars)
head(mtcars)
df <- select(mtcars, 1, 9)
rm(list = ls())
rm(list = ls())
library(dplyr)
library(ggplot2)
str(mtcars)
head(mtcars)
df <- select(mtcars, 1, 9)
mtcars$am <- as.factor(mtcars$am)
levels(mtcars$am) <- c("Automatic", "Manual")
ggplot(mtcars, aes(x=factor(am),y=mpg,fill=factor(am)))+
geom_boxplot(notch=F)+
scale_x_discrete("Transmission")+
scale_y_continuous("Miles per Gallon")+
ggtitle("MPG by Transmission Type")
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg)
ttest
t.test(mpg~am, data = mtcars)
rm(list = ls())
library(dplyr)
library(ggplot2)
str(mtcars)
head(mtcars)
df <- select(mtcars, 1, 9)
mtcars$am <- as.factor(mtcars$am)
levels(mtcars$am) <- c("Automatic", "Manual")
ggplot(mtcars, aes(x=factor(am),y=mpg,fill=factor(am)))+
geom_boxplot(notch=F)+
scale_x_discrete("Transmission")+
scale_y_continuous("Miles per Gallon")+
ggtitle("MPG by Transmission Type")
t.test(mpg~am, data = mtcars)
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg)
ttest
t.test(mpg~am, data = mtcars)
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg)
ttest
rm(list = ls())
library(dplyr)
library(ggplot2)
str(mtcars)
head(mtcars)
df <- select(mtcars, 1, 9)
mtcars$am <- as.factor(mtcars$am)
levels(mtcars$am) <- c("Automatic", "Manual")
ggplot(mtcars, aes(x=factor(am),y=mpg,fill=factor(am)))+
geom_boxplot(notch=F)+
scale_x_discrete("Transmission")+
scale_y_continuous("Miles per Gallon")+
ggtitle("MPG by Transmission Type")
rm(list = ls())
library(dplyr)
library(ggplot2)
str(mtcars)
head(mtcars)
df <- select(mtcars, 1, 9)
mtcars$am <- as.factor(mtcars$am)
levels(mtcars$am) <- c("Automatic", "Manual")
ggplot(mtcars, aes(x=factor(am),y=mpg,fill=factor(am)))+
geom_boxplot(notch=F)+
scale_x_discrete("Transmission")+
scale_y_continuous("Miles per Gallon")+
ggtitle("MPG by Transmission Type")
t.test(mpg~am, data = mtcars)
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg)
ttest
rm(list = ls())
library(dplyr)
library(ggplot2)
str(mtcars)
head(mtcars)
df <- select(mtcars, 1, 9)
mtcars$am <- as.factor(mtcars$am)
levels(mtcars$am) <- c("Automatic", "Manual")
ggplot(mtcars, aes(x=factor(am),y=mpg,fill=factor(am)))+
geom_boxplot(notch=F)+
scale_x_discrete("Transmission")+
scale_y_continuous("Miles per Gallon")+
ggtitle("MPG by Transmission Type")
t.test(mpg~am, data = mtcars)
t.test(mpg~am, data = mtcars)
rm(list = ls())
library(dplyr)
library(ggplot2)
str(mtcars)
head(mtcars)
df <- select(mtcars, 1, 9)
mtcars$am <- as.factor(mtcars$am)
levels(mtcars$am) <- c("Automatic", "Manual")
ggplot(mtcars, aes(x=factor(am),y=mpg,fill=factor(am)))+
geom_boxplot(notch=F)+
scale_x_discrete("Transmission")+
scale_y_continuous("Miles per Gallon")+
ggtitle("MPG by Transmission Type")
t.test(mpg~am, data = mtcars)
knitr::opts_chunk$set(echo = TRUE)
# Clean the environment
rm(list = ls())
# 10 mpg data points we collected
mpg = c(24.2, 25.3, 23.8, 27.1, 28.0, 25.4, 22.7, 24.6, 25.9, 23.1)
mean(mpg)
# One sample t-test
t.test(mpg, alternative = "less", mu = 26)
str(sleep)
# Draw box plot
plot(extra ~ group, data = sleep, col = c("green","yellow"))
# Select extra sleep hours for two drug groups
extra1 <- sleep$extra[sleep$group == 1]
extra2 <- sleep$extra[sleep$group == 2]
t.test(extra1, extra2, alternative = "two.sided", mu = 0, paired = TRUE)
# A simpler syntax
t.test(extra1, extra2, paired = TRUE)
# Use formula
t.test(extra ~ group, data = sleep, paired = TRUE)
t.test(extra ~ group, data = sleep)
t.test(mpg~am, mu = 0, data = mtcars)
t.test(mpg~am, mu = 2, data = mtcars)
t.test(mpg~am, mu = 1, data = mtcars)
t.test(mpg~am, mu = 10, data = mtcars)
t.test(mpg~am, mu = 0, data = mtcars)
t.test(mpg~am, mu = 2, data = mtcars)
t.test(mpg, mu = 2, data = mtcars)
t.test(mpg, data = mtcars)
t.test(mpg~am, data = mtcars)
t.test(mpg, data = mtcars)
~am
t.test(mpg~am, data = mtcars)
t.test(mpg~am, data = mtcars, paired = T)
t.test(mpg~am, data = mtcars, paired = TRUE)
t.test(mpg~am, data = mtcars, paired = FALSE)
M0 = Rejected
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg)
library(dplyr)
library(ggplot2)
str(mtcars)
head(mtcars)
df <- select(mtcars, 1, 9)
mtcars$am <- as.factor(mtcars$am)
levels(mtcars$am) <- c("Automatic", "Manual")
ggplot(mtcars, aes(x=factor(am),y=mpg,fill=factor(am)))+
geom_boxplot(notch=F)+
scale_x_discrete("Transmission")+
scale_y_continuous("Miles per Gallon")+
ggtitle("MPG by Transmission Type")
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg)
ttest
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "two-sided", mu = 0, paired = TRUE)
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "two.sided", mu = 0, paired = TRUE)
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "two.sided", mu = 0)
ttest
t.test(mpg~am, data = mtcars, paired = T)
t.test(mpg~am, data = mtcars)
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "two.sided", mu = 0)
ttest
t.test(mpg~am, data = mtcars)
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "lessthan", mu = 0)
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "less", mu = 0)
ttest
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "less", mu = 0)
ttest
t.test(mpg~am, data = mtcars)
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "less", mu = 0)
ttest
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "greater", mu = 0)
ttest
t.test(mpg~am, data = mtcars)
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "less", mu = 0)
ttest
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "greater", mu = 0)
ttest
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "two.sided", mu = 0)
ttest
t.test(mpg~am, data = mtcars)
library(dplyr)
library(ggplot2)
str(mtcars)
head(mtcars)
df <- select(mtcars, 1, 9)
mtcars$am <- as.factor(mtcars$am)
levels(mtcars$am) <- c("Automatic", "Manual")
ggplot(mtcars, aes(x=factor(am),y=mpg,fill=factor(am)))+
geom_boxplot(notch=F)+
scale_x_discrete("Transmission")+
scale_y_continuous("Miles per Gallon")+
ggtitle("MPG by Transmission Type")
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "less", mu = 0)
ttest
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "greater", mu = 0)
ttest
t.test(mpg~am, data = mtcars)
t.test(mpg, data = mtcars)
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "less", mu = 0)
ttest
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "greater", mu = 0)
ttest
t.test(mpg~am, data = mtcars)
t.test(mpg, data = mtcars)
t.test(am, data = mtcars)
View(mtcars)
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "less", mu = 0)
ttest
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "greater", mu = 0)
ttest
t.test(mpg~am, data = mtcars)
t.test(mpg, data = mtcars)
t.test(mpg~am, data = mtcars, alternative = "less")
mean(autoData)
View(manualData)
mean(autoData$mpg)
mean(manualData$mpg)
?mtcars
library(dplyr)
library(ggplot2)
str(mtcars)
head(mtcars)
df <- select(mtcars, 1, 9)
mtcars$am <- as.factor(mtcars$am)
levels(mtcars$am) <- c("Automatic", "Manual")
ggplot(mtcars, aes(x=factor(am),y=mpg,fill=factor(am)))+
geom_boxplot(notch=F)+
scale_x_discrete("Transmission")+
scale_y_continuous("Miles per Gallon")+
ggtitle("MPG by Transmission Type")
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "less", mu = 0)
ttest
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "greater", mu = 0)
ttest
t.test(mpg~am, data = mtcars)
t.test(mpg, data = mtcars)
t.test(mpg~am, data = mtcars, alternative = "less")
library(dplyr)
library(ggplot2)
str(mtcars)
head(mtcars)
df <- select(mtcars, 1, 9)
mtcars$am <- as.factor(mtcars$am)
levels(mtcars$am) <- c("Automatic", "Manual")
ggplot(mtcars, aes(x=factor(am),y=mpg,fill=factor(am)))+
geom_boxplot(notch=F)+
scale_x_discrete("Transmission")+
scale_y_continuous("Miles per Gallon")+
ggtitle("MPG by Transmission Type")
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "less", mu = 0)
ttest
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "greater", mu = 0)
ttest
t.test(mpg~am, data = mtcars)
t.test(mpg, data = mtcars)
t.test(mpg~am, data = mtcars, alternative = "less")
autoData <- mtcars[mtcars$am == "Automatic",]
rm(list = ls())
rm(list = ls())
library(dplyr)
library(ggplot2)
str(mtcars)
head(mtcars)
df <- select(mtcars, 1, 9)
mtcars$am <- as.factor(mtcars$am)
levels(mtcars$am) <- c("Automatic", "Manual")
ggplot(mtcars, aes(x=factor(am),y=mpg,fill=factor(am)))+
geom_boxplot(notch=F)+
scale_x_discrete("Transmission")+
scale_y_continuous("Miles per Gallon")+
ggtitle("MPG by Transmission Type")
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "less", mu = 0)
ttest
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "greater", mu = 0)
ttest
t.test(mpg~am, data = mtcars)
t.test(mpg, data = mtcars)
t.test(mpg, data = mtcars)
rlang::last_error()
t.test(am, data = mtcars)
rm(list = ls())
library(dplyr)
library(ggplot2)
str(mtcars)
head(mtcars)
df <- select(mtcars, 1, 9)
mtcars$am <- as.factor(mtcars$am)
levels(mtcars$am) <- c("Automatic", "Manual")
ggplot(mtcars, aes(x=factor(am),y=mpg,fill=factor(am)))+
geom_boxplot(notch=F)+
scale_x_discrete("Transmission")+
scale_y_continuous("Miles per Gallon")+
ggtitle("MPG by Transmission Type")
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "less", mu = 0)
ttest
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "greater", mu = 0)
ttest
t.test(mpg~am, data = mtcars)
t.test(mpg~am, data = mtcars, alternative = "less")
plot(mpg~am, data = mtcars)
plot(mpg~am, data = mtcars, col = "green", "blue")
plot(mpg~am, data = mtcars, col = c("green", "blue"))
plot(mpg~am, data = mtcars, col = c("green", "blue"))
ggplot(mtcars, aes(x=factor(am),y=mpg,fill=factor(am)))+
geom_boxplot(notch=F)+
scale_x_discrete("Transmission")+
scale_y_continuous("Miles per Gallon")+
ggtitle("MPG by Transmission Type")
ggplot(mpg~am, data = mtcars, col = c("green", "blue")) + geom_boxplot()
ggplot(mpg~am, data = mtcars, aes(col = c("green", "blue")) + geom_boxplot()
ggplot(mpg~am, data = mtcars, aes(col = c("green", "blue"))) + geom_boxplot()
ggplot(mpg~am, data = mtcars, aes(col = c("green", "blue"))) + geom_boxplot()
```{r}
ggplot(mtcars, aes(x=factor(am),y=mpg,fill=factor(am)))+
geom_boxplot(notch=F)+
scale_x_discrete("Transmission")+
scale_y_continuous("Miles per Gallon")+
ggtitle("MPG by Transmission Type")
t.test(autoData, alternative = "less")
t.test(autoData, )
t.test(autoData, alternative = "less" )
t.test(autoData, alternative = "less", M0 = 25 )
t.test(autoData )
rm(list = ls())
library(dplyr)
library(ggplot2)
str(mtcars)
head(mtcars)
df <- select(mtcars, 1, 9)
mtcars$am <- as.factor(mtcars$am)
levels(mtcars$am) <- c("Automatic", "Manual")
ggplot(mtcars, aes(x=factor(am),y=mpg,fill=factor(am)))+
geom_boxplot(notch=F)+
scale_x_discrete("Transmission")+
scale_y_continuous("Miles per Gallon")+
ggtitle("MPG by Transmission Type")
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "less", mu = 0)
ttest
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "greater", mu = 0)
ttest
t.test(mpg~am, data = mtcars)
t.test(autoData )
t.test(mpg~am, data = mtcars)
t.test(autoData$mpg, data = autoData
t.test(autoData$mpg, data = autoData)
t.test(autoData$mpg, data = autoData)
t.test(autoData$mpg, data = autoData)
t.test(mpg, data = manualData)
t.test(manualData$mpg, data = manualData)
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "less", mu = 0)
ttest
autoData <- mtcars[mtcars$am == "Automatic",]
manualData <- mtcars[mtcars$am == "Manual",]
ttest <- t.test(autoData$mpg, manualData$mpg, alternative = "greater", mu = 0)
ttest
t.test(mpg~am, data = mtcars)
t.test(autoData$mpg, data = autoData)
t.test(manualData$mpg, data = manualData)
install.packages(c("callr", "cluster", "datamods", "DT", "esquisse", "haven", "highr", "knitr", "mgcv", "RcppArmadillo", "recipes", "reticulate", "rgl", "RSQLite", "tibble", "tidyverse", "viridis", "withr"))
install.packages(c("callr", "cluster", "datamods", "DT", "esquisse", "haven", "highr", "knitr", "mgcv", "RcppArmadillo", "recipes", "reticulate", "rgl", "RSQLite", "tibble", "tidyverse", "viridis", "withr"))
install.packages(c("callr", "cluster", "datamods", "DT", "esquisse", "haven", "highr", "knitr", "mgcv", "RcppArmadillo", "recipes", "reticulate", "rgl", "RSQLite", "tibble", "tidyverse", "viridis", "withr"))
