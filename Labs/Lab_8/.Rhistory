knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
```
# 1
Download the cleansed weblog analytics data file “weblog_clean.jsonl” and read it into R (2pts). Note: The data file is in the format of JSON Lines. You should load “jsonlite” package and call stream_in() function to stream JSON input:
library(jsonlite)
weblog <- stream_in(file("weblog_clean.jsonlines"))
```{r}
library(jsonlite)
str(weblog)
weblog$request.datetime <- as.POSIXct(weblog$request.datetime, format = "%Y-%m-%d %H:%M:%S")
str(weblog)
summary(weblog)
weekday.freq <- table(weblog$weekday)
weekday.freq
print(max.weekday.freq)
print(max(weekday.freq)
print(weekday.freq)
max.weekday.freq
weekday.freq %>% select(which.max())
library(dplyr)
weekday.freq %>% select(which.max())
weekday.freq %>% which.max()
weekday.freq %>% which.min()
weekday.freq %>% which.max()
weekday.freq dplyr::%>% which.max()
weekday.freq "dplyr"::%>% which.max()
weekday.freq %>% which.max()
weekday.freq <- table(weblog$weekday)
weekday.freq
weekday.freq %>% which.max()
weekday.freq %>% which.max() print("Has the largest number of visits")
weekday.freq <- table(weblog$weekday)
weekday.freq
print("Has the largest number of visits")
weekday.freq %>% which.max()
print("Has the largest number of visits" + weekday.freq %>% which.max())
print("Has the largest number of visits" weekday.freq %>% which.max())
print("Has the largest number of visits" + weekday.freq %>% which.max())
print("Has the largest number of visits" + which.max(weekday.freq))
weekday.freq <- table(weblog$weekday)
weekday.freq
print("Has the largest number of visits")
weekday.freq %>% which.max()
weekday.freq %>% max()
weekday.freq %>% which.max() %>% max()
weekday.freq %>% which.max() %>% max()
weekday.freq %>% max() %>% which.max()
weekday.freq <- table(weblog$weekday)
weekday.freq
print("Has the largest number of visits")
weekday.freq %>% max() %>% which.max()
# 6
Cross tabulate weekday and request.uri (1 pt)(refer to the two-way frequency table on slide 17 of Chapter 5). How many visits of the “faq.html” page on Fridays (1 pt)?
```{r}
cross_tabulate <- table(weblog$weekday, weblog$request.uri)
cross_tabulate
```
weekday.freq <- table(weblog$weekday)
weekday.freq
print("Has the largest number of visits")
weekday.freq %>% max() %>% which.max()
weekday.freq %>% which.max()
max()
weekday.freq %>% max()
weekday.freq <- table(weblog$weekday)
weekday.freq
print("Has the largest number of visits")
weekday.freq %>% which.max()
weekday.freq %>% max()
weekday.freq %>% which.max()
weekday.freq <- table(weblog$weekday)
weekday.freq
print("Has the largest number of visits")
weekday.freq %>% which.max()
weekday.freq <- table(weblog$weekday)
weekday.freq
weekday.freq %>% which.max()
print("Has the largest number of visits")
weekday.freq <- table(weblog$weekday)
weekday.freq
print("Has the largest number of visits")
weekday.freq %>% which.max()
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(jsonlite)
weblog <- stream_in(file("weblog_clean.jsonlines"))
str(weblog)
weblog$request.datetime <- as.POSIXct(weblog$request.datetime, format = "%Y-%m-%d %H:%M:%S")
summary(weblog)
weekday.freq <- table(weblog$weekday)
weekday.freq
print("Has the largest number of visits")
weekday.freq %>% which.max()
cross_tabulate <- table(weblog$weekday, weblog$request.uri)
cross_tabulate
weblog.barplot <- table(weblog$weekday)
barplot(weblog.barplot)
quantile(z1,type = 2)  # Simple manual caculation method
source('C:/Users/Mark/iCloudDrive/Documents/School/Spring 2021/IST 3420/5. Data Summarization and Visualization/R_BasicGraphs.R', echo=TRUE)
## Stacked Bar Plots ##
cyl.gear <- table(mtcars$cyl,mtcars$gear)
cyl.gear
str(cyl.gear)
# Note again that columns of the table are plotted on x-axis
barplot(cyl.gear,
main="Distribution of Cylinders by Gear",
xlab="Number of Gears",
ylab = "Number of Cylinders",
col=rainbow(3),
legend = rownames(cyl.gear))
weblog.stacked <- table(weblog$request.uri, weblog$request.method)
weblog.stacked <- table(weblog$request.uri, weblog$request.method)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(jsonlite)
weblog <- stream_in(file("weblog_clean.jsonlines"))
str(weblog)
weblog$request.datetime <- as.POSIXct(weblog$request.datetime, format = "%Y-%m-%d %H:%M:%S")
summary(weblog)
weekday.freq <- table(weblog$weekday)
weekday.freq
print("Has the largest number of visits")
weekday.freq %>% which.max()
cross_tabulate <- table(weblog$weekday, weblog$request.uri)
cross_tabulate
weblog.barplot <- table(weblog$weekday)
barplot(weblog.barplot)
weblog.stacked <- table(weblog$request.uri, weblog$request.method)
barplot(weblog.stacked,
main = "Distributuion of Visits",
col = rainbow(2),
legend = rownames(weblog.stacked))
weblog.stacked <- table(weblog$request.uri, weblog$request.method)
barplot(weblog.stacked,
main = "Distributuion of Visits",
col = rainbow(2),
legend = rownames(weblog.stacked))
weblog.stacked <- table(weblog$request.method, weblog$request.uri)
barplot(weblog.stacked,
main = "Distributuion of Visits",
col = rainbow(2),
legend = rownames(weblog.stacked))
barplot(weblog.stacked,
main = "Distributuion of Visits",
col = rainbow(3),
legend = rownames(weblog.stacked))
# Five-Number Summary
z1 <- c(23,12,24,55,60,34,20,17,19,37,43,51)
z1[order(z1)] # Sort data
quantile(z1,type = 7)  # Default type
quantile(z1,type = 2)  # Simple manual caculation method
?quantile
# Box plot of a variable
set.seed(1)
x1 <- rnorm(100, mean = 5, sd = 2)
x1[88] <- 12; x1[89] <- 11.8  # Set two outliers
quantile(x1)
# Box plot of a variable
set.seed(1)
x1 <- rnorm(100, mean = 5, sd = 2)
x1
mean(x1)
# Box plot of a variable
set.seed(1)
x1 <- rnorm(100, mean = 5.0, sd = 2)
mean(x1)
# Box plot of a variable
set.seed(1)
x1 <- rnorm(100, mean = 6, sd = 2)
mean(x1)
# Box plot of a variable
set.seed(1)
x1 <- rnorm(100, mean = 5, sd = 2)
x1[88] <- 12; x1[89] <- 11.8  # Set two outliers
quantile(x1)
mean(x1)
summary(x1)
boxplot(x1)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(jsonlite)
weblog <- stream_in(file("weblog_clean.jsonlines"))
str(weblog)
weblog$request.datetime <- as.POSIXct(weblog$request.datetime, format = "%Y-%m-%d %H:%M:%S")
summary(weblog)
weekday.freq <- table(weblog$weekday)
sort(weekday.freq)
print("Has the largest number of visits")
weekday.freq %>% which.max()
cross_tabulate <- table(weblog$weekday, weblog$request.uri)
cross_tabulate
print("There are 4407 visits on the faq.html page on Friday")
weblog.barplot <- table(weblog$weekday)
barplot(weblog.barplot, col = rainbow(20), cex.names = .8)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(jsonlite)
weblog <- stream_in(file("weblog_clean.jsonlines"))
str(weblog)
weblog$request.datetime <- as.POSIXct(weblog$request.datetime, format = "%Y-%m-%d %H:%M:%S")
summary(weblog)
weekday.freq <- table(weblog$weekday)
sort(weekday.freq)
print("Has the largest number of visits")
weekday.freq %>% which.max()
cross_tabulate <- table(weblog$weekday, weblog$request.uri)
cross_tabulate
print("There are 4407 visits on the faq.html page on Friday")
weblog.barplot <- table(weblog$weekday)
barplot(weblog.barplot, col = rainbow(20), cex.names = .8)
weblog.stacked <- table(weblog$request.method, weblog$request.uri)
barplot(weblog.stacked,
main = "Distributuion of Visits",
col = rainbow(3),
legend = rownames(weblog.stacked))
weblog.piechart <- table(weblog$request.uri)
labels <- paste(names(weblog.piechart),"\n", weblog.piechart, sep = "")
pie(weblog.piechart, labels = labels, col = rainbow(5))
piechart <- round(weblog.piechart/sum(weblog.piechart)*100, digits = 1)
label2 <- paste(names(weblog.piechart), " visits\n", paste(piechart,"%"), sep="")
pie(piechart,
labels = label2,
col=rainbow(length(label2)))
quantile(weblog$response.size)
weblog.barplot <- table(weblog$weekday)
barplot(weblog.barplot, col = rainbow(2), cex.names = .8)
weblog.barplot <- table(weblog$weekday)
barplot(weblog.barplot, col = rainbow(2000), cex.names = .8)
weblog.barplot <- table(weblog$weekday)
barplot(weblog.barplot, col = rainbow(100000), cex.names = .8)
weblog.barplot <- table(weblog$weekday)
barplot(weblog.barplot, col = rainbow(1000000), cex.names = .8)
weblog.barplot <- table(weblog$weekday)
barplot(weblog.barplot, col = rainbow(10000000), cex.names = .8)
weblog.barplot <- table(weblog$weekday)
barplot(weblog.barplot, col = rainbow(100000000), cex.names = .8)
weblog.barplot <- table(weblog$weekday)
barplot(weblog.barplot, col = rainbow(20), cex.names = .8)
str(weblog)
cross_tabulate <- table( weblog$request.uri, weblog$weekday)
cross_tabulate
print("There are 4407 visits on the faq.html page on Friday")
cross_tabulate <- table( weblog$request.uri, weblog$weekday)
cross_tabulate
print("There are 4407 visits on the faq.html page on Friday")
cross_tabulate <- table(weblog$weekday, weblog$request.uri)
cross_tabulate
print("There are 4407 visits on the faq.html page on Friday")
weblog$weekday <- sort.default(weblog$weekday)
cross_tabulate <- table(weblog$weekday, weblog$request.uri)
cross_tabulate
cross_tabulate <- table(weblog$weekday, weblog$request.uri)
cross_tabulate
print("There are 4407 visits on the faq.html page on Friday")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(dplyr)
library(jsonlite)
weblog <- stream_in(file("weblog_clean.jsonlines"))
str(weblog)
weblog$request.datetime <- as.POSIXct(weblog$request.datetime, format = "%Y-%m-%d %H:%M:%S")
summary(weblog)
weekday.freq <- table(weblog$weekday)
sort(weekday.freq)
print("Has the largest number of visits")
weekday.freq %>% which.max()
cross_tabulate <- table(weblog$weekday, weblog$request.uri)
cross_tabulate
print("There are 4407 visits on the faq.html page on Friday")
weblog.barplot <- table(weblog$weekday)
barplot(weblog.barplot, col = rainbow(20), cex.names = .8)
weblog.stacked <- table(weblog$request.method, weblog$request.uri)
barplot(weblog.stacked,
main = "Distributuion of Visits",
col = rainbow(3),
legend = rownames(weblog.stacked))
weblog.piechart <- table(weblog$request.uri)
labels <- paste(names(weblog.piechart),"\n", weblog.piechart, sep = "")
pie(weblog.piechart, labels = labels, col = rainbow(5))
piechart <- round(weblog.piechart/sum(weblog.piechart)*100, digits = 1)
label2 <- paste(names(weblog.piechart), " visits\n", paste(piechart,"%"), sep="")
pie(piechart,
labels = label2,
col=rainbow(length(label2)))
quantile(weblog$response.size)
