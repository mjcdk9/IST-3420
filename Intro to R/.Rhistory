# Vectors
v1 <- c(1,2,3,4)  # Create a vector of numbers
v1[1]  # Access the 1st element
v1[4]  # Access the 4th element
v1[5]  # Access the 5th element (out of current range, "NA" means missing value/not available)
v1[1] <- 0  # Change the 1st element as 0
v1[5] <- 5  # Add 5 in the 5th position
v1[10] <- 10  # Add 10 in the 10th position (out of current range)
#v1[6]?
v1
# Update the vector
v1 <- c(1,2,3,4)
# Vector operators
min(v1)
max(v1)
sum(v1)
mean(v1)
median(v1)
sort(v1,decreasing = TRUE)
sort(v1)
v2 <- c("a","b","c")  # Create a vector of strings
v3 <- c(1,"a")
mode(v3)  # Check the type of storage mode
v4 <- c(10.4, 5.6, 3.1, 6.4, 21.7)
sort(v4)  # Sort by ascending order
sort(v4,decreasing = TRUE)  # Sort by descending order
table(v4)  # Counts of values
unique(v4)  # Unique values
plot(v4)  # plot the vector
# use "par(ask=F)" to turn off the the prompt "Hit <Return> to see next plot:"
plot(v4, type = "l",col = "red")  # plot the vector in line graph
help(plot)
v4
# use "par(ask=F)" to turn off the the prompt "Hit <Return> to see next plot:"
plot(v4, type = "l",col = "red")  # plot the vector in line graph
v4
names(v4) <- c("East","North","West","South","Central")  # To set vector name
v4
names(v4)  # To get vector name
barplot(v4)
# Sequence
5:9
seq(5,9)
seq(5,9,by = 1)
seq(5,9,by = 0.5)
seq(from = 5, to = 9, by = 0.4)
seq(0, 1, length.out = 11)
x <- seq(0,10, by=0.01)
x
plot(x,sin(x),type ="l")
# Repitition
rep(1:4, 3)
rep(1:4, each = 3)
rep(1:4, c(3,3,3,3))
rep(1:4, c(1,2,3,4))
# Vector Math
a <- c(1,2,3,4)
b <- a + 2
b
a*2
a/3
a^2
a<b
sin(b)
# What's the difference between & and &&
(a<2)&(b<4)
(a<2)&&(b<4)  # "(a<2)&&(b<4)" is equivalent to "(a[1]<2)&(b[1]<4)"
# Matrix
m1 <- matrix(1:12,ncol = 4)
# By default, the matrix is filled column by column
m1
# Matrix
m1 <- matrix(1:10,ncol = 4)
# By default, the matrix is filled column by column
m1
# Matrix
m1 <- matrix(1:12,ncol = 4)
# By default, the matrix is filled column by column
m1
dim(m1)  # show the dimensions of a matrix
m1[2,5]  # Access elements in a matrix
m1[1,]  # Show all elements in the 1st row
m2 <- matrix(1:12,ncol = 4, byrow = TRUE)
m2
m2 <- matrix(1:10,ncol = 4, byrow = TRUE)
m2 <- matrix(1:12,ncol = 4, byrow = TRUE)
m2
colnames(m2) <- c("a","b","c","d")
rownames(m2) <- c("i","j","k")
m2
colnames(m2)
rownames(m2)
m1 <= m2  # Compare two matrices
m1
m2
m1 <= m2  # Compare two matrices
m3 <- cbind(m1,m2)  # Combine matrices by column
m3
m3 <- cbind(m2,m1)  # Combine matrices by column
m3
m3 <- cbind(m1,m2)  # Combine matrices by column
m3
dim(m3)
m4 <- rbind(m1,m2)  # Combine matrices by row
m4
dim(m4)
m1
dim(m1)
dim(m1) <- c(2,6)  # Change the dimension of a matrix
m1
dim(m1)
m5 <- diag(2,5)  # Create a 3X3 matrix with a diagonal of ones, i.e., a 3X3 identity matrix
m5
m5 <- diag(1,5)  # Create a 3X3 matrix with a diagonal of ones, i.e., a 3X3 identity matrix
m5
# Matrix Computations
a1 <- matrix(c(1,1,0,1,3,1,0,1,7),3,3, byrow = TRUE)
a1
i1 <- diag(1,3)
i1
a1 + i1  # Matrix addition
a1 - i1  # Matrix subtraction
2*a1  # Scalar multiplication
# Plot matrix data
v <- volcano
dim(v)
contour(v)  # Draw a contour map
persp(v, expand=0.2)  # Draw a perspective plots of the surface
persp(v, expand=0.2, col = "green")
# Data Frame
id <- c(11,12,13)
name <- c("Lily","Jim","Tom")
credit <- c(710,700,710)
df <- data.frame(id,name,credit)
df
df["name"]   # Show the name column
class(df["name"])
df[["name"]]
class(df[["name"]])
attributes(df)  # Show attributes
str(df)  # Show structure
a <- df["credit"]
a
attributes(a)
b <- df[["credit"]]
b
attributes(b)
c <- df$credit  # A shorthand for double brackets
attributes(c)
c
# Rename a column
df
names(df)[names(df)=="name"] <- "first.name"
df
# List
list1 <- list("a",5,TRUE)
list1
list1[[1]]
list1[1:3]  # Show the 1st through 3rd element.
list1[c(1,3)]  # Show the 1st and 3rd element
list2 <- list(list1,1+2i)  # list2 contains list1
list2
list2[[1]][[2]]
